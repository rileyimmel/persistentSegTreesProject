\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{torch}
\PYG{k+kn}{from} \PYG{n+nn}{flow\PYGZus{}matching.path} \PYG{k+kn}{import} \PYG{n}{AffineProbPath}
\PYG{k+kn}{from} \PYG{n+nn}{flow\PYGZus{}matching.path.scheduler} \PYG{k+kn}{import} \PYG{n}{ScheduleTransformedModel}\PYG{p}{,} \PYG{n}{CondOTScheduler}\PYG{p}{,} \PYG{n}{VPScheduler}
\PYG{k+kn}{from} \PYG{n+nn}{flow\PYGZus{}matching.solver} \PYG{k+kn}{import} \PYG{n}{ODESolver}
\PYG{k+kn}{from} \PYG{n+nn}{flow\PYGZus{}matching.utils} \PYG{k+kn}{import} \PYG{n}{ModelWrapper}

\PYG{n}{training\PYGZus{}scheduler} \PYG{o}{=} \PYG{n}{VPScheduler}\PYG{p}{()}  \PYG{c+c1}{\PYGZsh{} Variance preserving schedule}
\PYG{n}{path} \PYG{o}{=} \PYG{n}{AffineProbPath}\PYG{p}{(}\PYG{n}{scheduler}\PYG{o}{=}\PYG{n}{training\PYGZus{}scheduler}\PYG{p}{)}
\PYG{n}{velocity\PYGZus{}model}\PYG{p}{:} \PYG{n}{ModelWrapper} \PYG{o}{=} \PYG{o}{...}  \PYG{c+c1}{\PYGZsh{} Train a velocity model with the variance preserving schedule}

\PYG{c+c1}{\PYGZsh{} Change the scheduler from variance preserving to conditional OT schedule}
\PYG{n}{sampling\PYGZus{}scheduler} \PYG{o}{=} \PYG{n}{CondOTScheduler}\PYG{p}{()}
\PYG{n}{transformed\PYGZus{}model} \PYG{o}{=} \PYG{n}{ScheduleTransformedModel}\PYG{p}{(}
    \PYG{n}{velocity\PYGZus{}model}\PYG{o}{=}\PYG{n}{velocity\PYGZus{}model}\PYG{p}{,}
    \PYG{n}{original\PYGZus{}scheduler}\PYG{o}{=}\PYG{n}{training\PYGZus{}scheduler}\PYG{p}{,}
    \PYG{n}{new\PYGZus{}scheduler}\PYG{o}{=}\PYG{n}{sampling\PYGZus{}scheduler}
\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} Sample the transformed model with the conditional OT schedule}
\PYG{n}{solver} \PYG{o}{=} \PYG{n}{ODESolver}\PYG{p}{(}\PYG{n}{velocity\PYGZus{}model}\PYG{o}{=}\PYG{n}{transformed\PYGZus{}model}\PYG{p}{)}
\PYG{n}{x\PYGZus{}0} \PYG{o}{=} \PYG{n}{torch}\PYG{o}{.}\PYG{n}{randn}\PYG{p}{(}\PYG{n}{batch\PYGZus{}size}\PYG{p}{,} \PYG{o}{*}\PYG{n}{data\PYGZus{}dim}\PYG{p}{)}  \PYG{c+c1}{\PYGZsh{} Specify the initial condition}
\PYG{n}{solver} \PYG{o}{=} \PYG{n}{ODESolver}\PYG{p}{(}\PYG{n}{velocity\PYGZus{}model}\PYG{o}{=}\PYG{n}{velocity\PYGZus{}model}\PYG{p}{)}
\PYG{n}{num\PYGZus{}steps} \PYG{o}{=} \PYG{l+m+mi}{100}
\PYG{n}{x\PYGZus{}1} \PYG{o}{=} \PYG{n}{solver}\PYG{o}{.}\PYG{n}{sample}\PYG{p}{(}\PYG{n}{x\PYGZus{}init}\PYG{o}{=}\PYG{n}{x\PYGZus{}0}\PYG{p}{,} \PYG{n}{method}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}midpoint\PYGZsq{}}\PYG{p}{,} \PYG{n}{step\PYGZus{}size}\PYG{o}{=}\PYG{l+m+mf}{1.0} \PYG{o}{/} \PYG{n}{num\PYGZus{}steps}\PYG{p}{)}
\end{Verbatim}
